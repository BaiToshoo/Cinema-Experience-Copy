@model MovieDetailsViewModel

@{
    ViewData["Title"] = Model.Title;
}

<div class="movie-details-container">
    <h1>@Model.Title</h1>

    <div class="movie-meta">
        <img src="@Model.ImageUrl" alt="Poster for @Model.Title" class="movie-poster" />
        <div class="movie-info">
            <p><strong>Director:</strong> @Model.Director</p>
            <p> <strong>Genres:</strong> @string.Join("/", Model.Genres.Select(g => g.Name)) </p>
            <p><strong>Release Date:</strong> @Model.ReleaseDate.ToShortDateString()</p>
            <p><strong>Duration:</strong> @Model.Duration mins</p>
            <p>@Model.Description</p>
        </div>
    </div>

    <div class="movie-scores">
        <div class="score critic-score">
            <label>Critic Score</label>
            <progress value="@Model.CriticsRating" max="100"></progress>
            <span>@Model.CriticsRating %</span>
        </div>
        <div class="score audience-score">
            <label>Audience Score</label>
            <progress value="@Model.UserRating" max="100"></progress>
            <span>@Model.UserRating %</span>
        </div>
    </div>

    <div class="movie-cast">
        <h3>Cast</h3>
        <div class="cast-list">
            @if (Model.Actors.Any())
            {
                @foreach (var actor in Model.Actors)
                {
                    <a href="@Url.Action("Details", "Actor", new { id = actor.Id })">
                        <div class="cast-member">
                            <img src="@actor.ImageUrl" alt="@actor.Name" class="actor-image" />
                            <span class="actor-name">@actor.Name</span>
                        </div>
                    </a>
                }
            }
            else
            {
                <div class="col-md-12">
                    <h2 class="text-center">No Cast yet</h2>
                </div>
            }
        </div>
    </div>

    <div class="reviews-section">
        <h2>Reviews</h2>
        <div class="reviews-container">
            @foreach (var review in Model.LatestReviews)
            {
                <div class="review-card" id="@($"review-{review.Id}")">
                    <div class="review-header">
                        <div class="review-meta">
                            <div class="review-author">@review.AuthorName</div>
                            <div class="review-role @(review.IsCriticsReview ? "critic-role" : "audience-role")">
                                @(review.IsCriticsReview ? "Critic" : "Audience")
                            </div>
                            <div class="review-date">@review.PostedOn.ToString(Dateformat, new CultureInfo("en-US"))</div>
                            <div class="review-rating">@review.Rating</div>
                        </div>
                    </div>
                    <div class="review-content">
                        <div class="less" >
                            @(review.Content.Length <= 55 ? review.Content : review.Content.Substring(0, 55) + (review.Content.Length > 55 ? "...": ""))
                        </div>
                        @if (review.Content.Length > 55)
                        {
                            <div class="more" style="display: none;">@review.Content</div>
                            <div><a href="#" class="load-more">Read more...</a></div>
                        }
                    </div>
                </div>
            }
        </div>
        <a href="@Url.Action("Add", "Review", new { Id = Model.Id })" class="btn btn-primary">Add Review</a>
        <a href="@Url.Action("All", "Review", new { Id = Model.Id })" class="btn btn-primary">View All Reviews</a>
    </div>

</div>

@section Scripts{
	<script>
		$(document).ready(function () {
			$(".load-more").on("click", function (e) {
				e.preventDefault();
				var $this = $(this);
                $this.parent().prevAll('.more, .less').toggle();
				$this.text($this.text() === "Read more..." ? "Read less..." : "Read more...");
			});
		});
	</script>
}
```
